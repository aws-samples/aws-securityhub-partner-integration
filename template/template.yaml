# Copyright 2023 Amazon.com, Inc. or its affiliates. All Rights Reserved..
# SPDX-License-Identifier: MIT-0

AWSTemplateFormatVersion: "2010-09-09"
Description: "StackSet to enable AWS Security Hub partner integration"
Parameters:
  ProductName:
    Type: String
    Description: 'Partner Product Name'
    ConstraintDescription: Must be only composed of letters, digits, and hyphens
    AllowedPattern: ^[a-zA-Z0-9-]+$
  ProductArn:
    Type: String
    Description: 'Product Arn (arn:aws:securityhub:<REGION>:Product). Use <REGION> to specify all regions'
  DeploymentVersion:
    Type: String
    Default: "1"
    Description: 'Deployment version, used to deploy new regions'
  DeploymentTargets:
    Type: CommaDelimitedList
    Description: List of OUs for deploying

Resources:
  OrganizationStackset:
    Type: AWS::CloudFormation::StackSet
    Properties:
      StackSetName: !Sub "aws-securityhub-partner-integration-2-${ProductName}"
      Description: !Sub "Setup AWS Security Hub partner integration ${ProductName}"
      StackInstancesGroup:
        - DeploymentTargets:
            OrganizationalUnitIds: !Ref DeploymentTargets
          Regions:
            - !Ref AWS::Region
      PermissionModel: SERVICE_MANAGED
      CallAs: DELEGATED_ADMIN
      AutoDeployment:
        Enabled: true
        RetainStacksOnAccountRemoval: false
      Capabilities:
        - CAPABILITY_NAMED_IAM
      OperationPreferences:
        RegionConcurrencyType: PARALLEL
        FailureTolerancePercentage: 50
        MaxConcurrentPercentage: 10
      Parameters:
        - ParameterKey: ProductArn
          ParameterValue: !Ref ProductArn
        - ParameterKey: DeploymentVersion
          ParameterValue: !Ref DeploymentVersion
      TemplateBody: |
        AWSTemplateFormatVersion: '2010-09-09'
        Description: Enable security hub partner across all regions
        Parameters:
          ProductArn:
            Type: String
            Description: 'Product Arn (arn:aws:securityhub:<REGION>:Product). Use <REGION> to specify all regions'
          DeploymentVersion:
            Type: String
            Description: 'Deployment version, increase if needed when enabling AWS Security Hub in new regions'
            Default: 1

        Resources:
          EnableIntegrationLambda:
            Type: AWS::Lambda::Function
            Properties:
              Code:
                ZipFile: |
                  import os
                  import logging
                  from datetime import datetime
                  import json
                  import boto3
                  import cfnresponse
                  from botocore.exceptions import ClientError

                  logger = logging.getLogger()
                  logger.setLevel(logging.INFO)

                  session = boto3.session.Session()
                  regions = session.get_available_regions('securityhub')

                  def lambda_handler(event, context):

                      product_arn = event['ResourceProperties']['ProductArn']
                      product_name = product_arn.split('/',1).pop()
                      account_id = context.invoked_function_arn.split(':')[4]

                      logger.info(f'Enabling integration, event: {event} for {account_id}')

                      for region in regions:
                        security_hub_enabled = True
                        try:
                          regional_client = session.client('securityhub',region_name=region)
                          hub_arn = regional_client.describe_hub()["HubArn"]
                        except ClientError as e:
                          logger.info('Security Hub disabled for %s',region)
                          security_hub_enabled = False

                        if security_hub_enabled:
                          try:

                            if event['RequestType'] == 'Create' or event['RequestType'] == 'Update':
                              region_product_arn = product_arn.replace("<REGION>", region)

                              response = regional_client.enable_import_findings_for_product(
                                ProductArn=region_product_arn
                              )

                            elif event['RequestType'] == 'Delete':
                              subscription_product_arn = f'arn:aws:securityhub:{region}:{account_id}:product-subscription/{product_name}'

                              response = regional_client.disable_import_findings_for_product(
                                ProductSubscriptionArn=subscription_product_arn
                              )

                            else:
                                logger.error(f'Unknown operation, event: {event}')
                          except ClientError as e:
                            if e.response["Error"]["Code"] == "ResourceConflictException":
                              logger.info(
                                  f"Security Hub product already enabled/disabled for {region}"
                                )
                            else:
                              logger.error(f'Error: {e}')
                              cfnresponse.send(event, context, cfnresponse.FAILED, {'Error': str(e)})

                      logger.info("Integration enabled")
                      cfnresponse.send(event, context, cfnresponse.SUCCESS, {})

              Handler: 'index.lambda_handler'
              Role: !GetAtt 'LambdaExecutionRole.Arn'
              Runtime: python3.9
              Timeout: 300

          LambdaExecutionRole:
            Type: AWS::IAM::Role
            Properties:
              AssumeRolePolicyDocument:
                Version: '2012-10-17'
                Statement:
                  - Effect: Allow
                    Principal:
                      Service:
                        - lambda.amazonaws.com
                    Action:
                      - sts:AssumeRole
              ManagedPolicyArns:
                - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
              Policies:
                - PolicyName: EnableProduct
                  PolicyDocument:
                    Version: '2012-10-17'
                    Statement:
                      - Effect: Allow
                        Action:
                          - 'securityhub:DescribeHub'
                          - 'securityhub:EnableImportFindingsForProduct'
                          - 'securityhub:DisableImportFindingsForProduct'
                        Resource: '*'

          CustomResourceSecurityHub:
            Type: Custom::CustomResource
            Properties:
              ServiceToken: !GetAtt 'EnableIntegrationLambda.Arn'
              ProductArn: !Ref ProductArn
              DeploymentVersion: !Ref DeploymentVersion
